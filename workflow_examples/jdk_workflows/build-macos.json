{
  "name": "Build (macos)",
  "on": {
    "workflow_call": {
      "inputs": {
        "platform": {
          "required": true,
          "type": "string"
        },
        "extra-conf-options": {
          "required": false,
          "type": "string"
        },
        "make-target": {
          "required": false,
          "type": "string",
          "default": "product-bundles test-bundles"
        },
        "debug-levels": {
          "required": false,
          "type": "string",
          "default": "[ \"debug\", \"release\" ]"
        },
        "xcode-toolset-version": {
          "required": true,
          "type": "string"
        },
        "configure-arguments": {
          "required": false,
          "type": "string"
        },
        "make-arguments": {
          "required": false,
          "type": "string"
        }
      }
    }
  },
  "jobs": {
    "build-macos": {
      "name": "build",
      "runs-on": "macos-11",
      "strategy": {
        "fail-fast": false,
        "matrix": {
          "debug-level": "${{ fromJSON(inputs.debug-levels) }}",
          "include": [
            {
              "debug-level": "debug",
              "flags": "--with-debug-level=fastdebug",
              "suffix": "-debug"
            }
          ]
        }
      },
      "steps": [
        {
          "name": "Checkout the JDK source",
          "uses": "actions/checkout@v3"
        },
        {
          "name": "Get the BootJDK",
          "id": "bootjdk",
          "uses": "./.github/actions/get-bootjdk",
          "with": {
            "platform": "macos-x64"
          }
        },
        {
          "name": "Get JTReg",
          "id": "jtreg",
          "uses": "./.github/actions/get-jtreg"
        },
        {
          "name": "Get GTest",
          "id": "gtest",
          "uses": "./.github/actions/get-gtest"
        },
        {
          "name": "Install toolchain and dependencies",
          "run": "# Run Homebrew installation and xcode-select\nbrew install make\nsudo xcode-select --switch /Applications/Xcode_${{ inputs.xcode-toolset-version }}.app/Contents/Developer\n# This will make GNU make available as 'make' and not only as 'gmake'\necho '/usr/local/opt/make/libexec/gnubin' >> $GITHUB_PATH\n"
        },
        {
          "name": "Configure",
          "run": "bash configure --with-conf-name=${{ inputs.platform }} ${{ matrix.flags }} --with-version-opt=${GITHUB_ACTOR}-${GITHUB_SHA} --with-boot-jdk=${{ steps.bootjdk.outputs.path }} --with-jtreg=${{ steps.jtreg.outputs.path }} --with-gtest=${{ steps.gtest.outputs.path }} --enable-jtreg-failure-handler --with-zlib=system --with-jmod-compress=zip-1 ${{ inputs.extra-conf-options }} ${{ inputs.configure-arguments }} || ( echo \"Dumping config.log:\" && cat config.log && exit 1)\n"
        },
        {
          "name": "Build",
          "id": "build",
          "uses": "./.github/actions/do-build",
          "with": {
            "make-target": "${{ inputs.make-target }} ${{ inputs.make-arguments }}",
            "platform": "${{ inputs.platform }}",
            "debug-suffix": "${{ matrix.suffix }}"
          }
        },
        {
          "name": "Upload bundles",
          "uses": "./.github/actions/upload-bundles",
          "with": {
            "platform": "${{ inputs.platform }}",
            "debug-suffix": "${{ matrix.suffix }}"
          }
        }
      ]
    }
  }
}