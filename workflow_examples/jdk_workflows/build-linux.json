{
  "name": "Build (linux)",
  "on": {
    "workflow_call": {
      "inputs": {
        "platform": {
          "required": true,
          "type": "string"
        },
        "extra-conf-options": {
          "required": false,
          "type": "string"
        },
        "make-target": {
          "required": false,
          "type": "string",
          "default": "product-bundles test-bundles"
        },
        "debug-levels": {
          "required": false,
          "type": "string",
          "default": "[ \"debug\", \"release\" ]"
        },
        "gcc-major-version": {
          "required": true,
          "type": "string"
        },
        "gcc-package-suffix": {
          "required": false,
          "type": "string",
          "default": ""
        },
        "apt-gcc-version": {
          "required": true,
          "type": "string"
        },
        "apt-architecture": {
          "required": false,
          "type": "string"
        },
        "apt-extra-packages": {
          "required": false,
          "type": "string"
        },
        "configure-arguments": {
          "required": false,
          "type": "string"
        },
        "make-arguments": {
          "required": false,
          "type": "string"
        }
      }
    }
  },
  "jobs": {
    "build-linux": {
      "name": "build",
      "runs-on": "ubuntu-22.04",
      "strategy": {
        "fail-fast": false,
        "matrix": {
          "debug-level": "${{ fromJSON(inputs.debug-levels) }}",
          "include": [
            {
              "debug-level": "debug",
              "flags": "--with-debug-level=fastdebug",
              "suffix": "-debug"
            }
          ]
        }
      },
      "steps": [
        {
          "name": "Checkout the JDK source",
          "uses": "actions/checkout@v3"
        },
        {
          "name": "Get the BootJDK",
          "id": "bootjdk",
          "uses": "./.github/actions/get-bootjdk",
          "with": {
            "platform": "linux-x64"
          }
        },
        {
          "name": "Get JTReg",
          "id": "jtreg",
          "uses": "./.github/actions/get-jtreg"
        },
        {
          "name": "Get GTest",
          "id": "gtest",
          "uses": "./.github/actions/get-gtest"
        },
        {
          "name": "Set architecture",
          "id": "arch",
          "run": "# Set a proper suffix for packages if using a different architecture\nif [[ '${{ inputs.apt-architecture }}' != '' ]]; then\n  echo 'suffix=:${{ inputs.apt-architecture }}' >> $GITHUB_OUTPUT\nfi\n"
        },
        {
          "name": "Install toolchain and dependencies",
          "run": "# Install dependencies using apt-get\nif [[ '${{ inputs.apt-architecture }}' != '' ]]; then\n  sudo dpkg --add-architecture ${{ inputs.apt-architecture }}\nfi\nsudo apt-get update\nsudo apt-get install --only-upgrade apt\nsudo apt-get install gcc-${{ inputs.gcc-major-version }}${{ inputs.gcc-package-suffix }}=${{ inputs.apt-gcc-version }} g++-${{ inputs.gcc-major-version }}${{ inputs.gcc-package-suffix }}=${{ inputs.apt-gcc-version }} libxrandr-dev${{ steps.arch.outputs.suffix }} libxtst-dev${{ steps.arch.outputs.suffix }} libcups2-dev${{ steps.arch.outputs.suffix }} libasound2-dev${{ steps.arch.outputs.suffix }} ${{ inputs.apt-extra-packages }}\nsudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${{ inputs.gcc-major-version }} 100 --slave /usr/bin/g++ g++ /usr/bin/g++-${{ inputs.gcc-major-version }}\n"
        },
        {
          "name": "Configure",
          "run": "bash configure --with-conf-name=${{ inputs.platform }} ${{ matrix.flags }} --with-version-opt=${GITHUB_ACTOR}-${GITHUB_SHA} --with-boot-jdk=${{ steps.bootjdk.outputs.path }} --with-jtreg=${{ steps.jtreg.outputs.path }} --with-gtest=${{ steps.gtest.outputs.path }} --enable-jtreg-failure-handler --with-zlib=system --with-jmod-compress=zip-1 ${{ inputs.extra-conf-options }} ${{ inputs.configure-arguments }} || ( echo \"Dumping config.log:\" && cat config.log && exit 1)\n"
        },
        {
          "name": "Build",
          "id": "build",
          "uses": "./.github/actions/do-build",
          "with": {
            "make-target": "${{ inputs.make-target }} ${{ inputs.make-arguments }}",
            "platform": "${{ inputs.platform }}",
            "debug-suffix": "${{ matrix.suffix }}"
          }
        },
        {
          "name": "Upload bundles",
          "uses": "./.github/actions/upload-bundles",
          "with": {
            "platform": "${{ inputs.platform }}",
            "debug-suffix": "${{ matrix.suffix }}"
          }
        }
      ]
    }
  }
}