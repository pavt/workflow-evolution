{
  "name": "Linters",
  "on": {
    "pull_request": {
      "types": [
        "opened",
        "synchronize",
        "reopened",
        "ready_for_review"
      ]
    },
    "push": {
      "branches": [
        "main",
        "v[0-9]+.x-staging",
        "v[0-9]+.x"
      ]
    }
  },
  "concurrency": {
    "group": "${{ github.workflow }}-${{ github.head_ref || github.run_id }}",
    "cancel-in-progress": true
  },
  "env": {
    "PYTHON_VERSION": "3.11",
    "NODE_VERSION": "lts/*"
  },
  "permissions": {
    "contents": "read"
  },
  "jobs": {
    "lint-addon-docs": {
      "if": "github.event.pull_request.draft == false",
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "uses": "actions/checkout@v3",
          "with": {
            "persist-credentials": false
          }
        },
        {
          "name": "Use Node.js ${{ env.NODE_VERSION }}",
          "uses": "actions/setup-node@v3",
          "with": {
            "node-version": "${{ env.NODE_VERSION }}"
          }
        },
        {
          "name": "Environment Information",
          "run": "npx envinfo"
        },
        {
          "name": "Lint addon docs",
          "run": "NODE=$(command -v node) make lint-addon-docs"
        }
      ]
    },
    "lint-cpp": {
      "if": "github.event.pull_request.draft == false",
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "uses": "actions/checkout@v3",
          "with": {
            "persist-credentials": false
          }
        },
        {
          "name": "Set up Python ${{ env.PYTHON_VERSION }}",
          "uses": "actions/setup-python@v4",
          "with": {
            "python-version": "${{ env.PYTHON_VERSION }}"
          }
        },
        {
          "name": "Environment Information",
          "run": "npx envinfo"
        },
        {
          "name": "Lint C/C++ files",
          "run": "make lint-cpp"
        }
      ]
    },
    "format-cpp": {
      "if": "${{ github.event.pull_request && github.event.pull_request.draft == false && github.base_ref == github.event.repository.default_branch }}",
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "uses": "actions/checkout@v3",
          "with": {
            "fetch-depth": 0,
            "persist-credentials": false
          }
        },
        {
          "name": "Use Node.js ${{ env.NODE_VERSION }}",
          "uses": "actions/setup-node@v3",
          "with": {
            "node-version": "${{ env.NODE_VERSION }}"
          }
        },
        {
          "name": "Set up Python ${{ env.PYTHON_VERSION }}",
          "uses": "actions/setup-python@v4",
          "with": {
            "python-version": "${{ env.PYTHON_VERSION }}"
          }
        },
        {
          "name": "Environment Information",
          "run": "npx envinfo"
        },
        {
          "name": "Format C/C++ files",
          "run": "make format-cpp-build\n# The `make format-cpp` error code is intentionally ignored here\n# because it is irrelevant. We already check if the formatter produced\n# a diff in the next line.\n# Refs: https://github.com/nodejs/node/pull/42764\nCLANG_FORMAT_START=\"$(git merge-base HEAD refs/remotes/origin/$GITHUB_BASE_REF)\" \\\n  make format-cpp || true\ngit --no-pager diff --exit-code && EXIT_CODE=\"$?\" || EXIT_CODE=\"$?\"\nif [ \"$EXIT_CODE\" != \"0\" ]\nthen\n  echo\n  echo 'ERROR: Please run:'\n  echo\n  echo \"  CLANG_FORMAT_START=\"$\\(git merge-base HEAD ${GITHUB_BASE_REF}\\)\" make format-cpp\"\n  echo\n  echo 'to format the commits in your branch.'\n  exit \"$EXIT_CODE\"\nfi\n"
        }
      ]
    },
    "lint-js-and-md": {
      "if": "github.event.pull_request.draft == false",
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "uses": "actions/checkout@v3",
          "with": {
            "persist-credentials": false
          }
        },
        {
          "name": "Use Node.js ${{ env.NODE_VERSION }}",
          "uses": "actions/setup-node@v3",
          "with": {
            "node-version": "${{ env.NODE_VERSION }}"
          }
        },
        {
          "name": "Environment Information",
          "run": "npx envinfo"
        },
        {
          "name": "Lint JavaScript files",
          "run": "NODE=$(command -v node) make lint-js"
        },
        {
          "name": "Get release version numbers",
          "if": "${{ github.event.pull_request && github.event.pull_request.base.ref == github.event.pull_request.base.repo.default_branch }}",
          "id": "get-released-versions",
          "run": "./tools/lint-md/list-released-versions-from-changelogs.mjs"
        },
        {
          "name": "Lint markdown files",
          "run": "echo \"::add-matcher::.github/workflows/remark-lint-problem-matcher.json\"\nNODE=$(command -v node) make lint-md\n",
          "env": {
            "NODE_RELEASED_VERSIONS": "${{ steps.get-released-versions.outputs.NODE_RELEASED_VERSIONS }}"
          }
        }
      ]
    },
    "lint-py": {
      "if": "github.event.pull_request.draft == false",
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "uses": "actions/checkout@v3",
          "with": {
            "persist-credentials": false
          }
        },
        {
          "name": "Set up Python ${{ env.PYTHON_VERSION }}",
          "uses": "actions/setup-python@v4",
          "with": {
            "python-version": "${{ env.PYTHON_VERSION }}"
          }
        },
        {
          "name": "Environment Information",
          "run": "npx envinfo"
        },
        {
          "name": "Lint Python",
          "run": "make lint-py-build || true\nmake lint-py\n"
        }
      ]
    },
    "lint-yaml": {
      "if": "github.event.pull_request.draft == false",
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "uses": "actions/checkout@v3",
          "with": {
            "persist-credentials": false
          }
        },
        {
          "name": "Use Python ${{ env.PYTHON_VERSION }}",
          "uses": "actions/setup-python@v4",
          "with": {
            "python-version": "${{ env.PYTHON_VERSION }}"
          }
        },
        {
          "name": "Environment Information",
          "run": "npx envinfo"
        },
        {
          "name": "Lint YAML",
          "run": "make lint-yaml-build || true\nmake lint-yaml\n"
        }
      ]
    },
    "lint-sh": {
      "if": "github.event.pull_request.draft == false",
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "uses": "actions/checkout@v3",
          "with": {
            "persist-credentials": false
          }
        },
        {
          "run": "shellcheck -V"
        },
        {
          "name": "Lint Shell scripts",
          "run": "tools/lint-sh.mjs ."
        }
      ]
    },
    "lint-codeowners": {
      "if": "github.event.pull_request.draft == false",
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "uses": "actions/checkout@v3",
          "with": {
            "persist-credentials": false
          }
        },
        {
          "uses": "mszostok/codeowners-validator@7f3f5e28c6d7b8dfae5731e54ce2272ca384592f",
          "with": {
            "checks": "files,duppatterns"
          }
        }
      ]
    },
    "lint-pr-url": {
      "if": "${{ github.event.pull_request }}",
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "uses": "actions/checkout@v3",
          "with": {
            "fetch-depth": 2,
            "persist-credentials": false
          }
        },
        {
          "run": "git diff HEAD^ HEAD -G\"pr-url:\" -- \"*.md\" | ./tools/lint-pr-url.mjs ${{ github.event.pull_request.html_url }}"
        }
      ]
    }
  }
}