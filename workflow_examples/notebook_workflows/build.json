{
  "name": "Build",
  "on": {
    "push": {
      "branches": [
        "main"
      ]
    },
    "pull_request": null
  },
  "permissions": {
    "contents": "write"
  },
  "concurrency": {
    "group": "${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}",
    "cancel-in-progress": true
  },
  "env": {
    "PIP_DISABLE_PIP_VERSION_CHECK": 1
  },
  "defaults": {
    "run": {
      "shell": "bash -eux {0}"
    }
  },
  "jobs": {
    "build": {
      "runs-on": "ubuntu-latest",
      "steps": [
        {
          "name": "Checkout",
          "uses": "actions/checkout@v3"
        },
        {
          "name": "Build",
          "uses": "./.github/actions/build-dist"
        }
      ]
    },
    "test": {
      "runs-on": "ubuntu-latest",
      "timeout-minutes": 10,
      "steps": [
        {
          "name": "Checkout",
          "uses": "actions/checkout@v3"
        },
        {
          "name": "Base Setup",
          "uses": "jupyterlab/maintainer-tools/.github/actions/base-setup@v1",
          "with": {
            "python_version": "3.10"
          }
        },
        {
          "name": "Install the package",
          "run": "python -m pip install \".[dev,test]\"\njlpm run build:test\n"
        },
        {
          "name": "Unit tests",
          "run": "jlpm run test\npytest -vv || pytest -vv --lf\n"
        },
        {
          "name": "Integration Tests",
          "run": "jupyter labextension list 2>&1 | grep -ie \"@jupyter-notebook/lab-extension.*enabled.*ok\" -\njupyter server extension list 2>&1 | grep -ie \"notebook.*enabled\" -\npython -m jupyterlab.browser_check\n"
        }
      ]
    },
    "install": {
      "needs": [
        "build"
      ],
      "runs-on": "${{ matrix.os }}",
      "timeout-minutes": 10,
      "strategy": {
        "fail-fast": false,
        "matrix": {
          "os": [
            "ubuntu-latest",
            "macos-latest",
            "windows-latest"
          ],
          "python": [
            "3.7",
            "3.10"
          ],
          "include": [
            {
              "python": "3.7",
              "dist": "notebook*.tar.gz"
            },
            {
              "python": "3.10",
              "dist": "notebook*.whl"
            },
            {
              "os": "windows-latest",
              "py_cmd": "python"
            },
            {
              "os": "macos-latest",
              "py_cmd": "python3"
            },
            {
              "os": "ubuntu-latest",
              "py_cmd": "python"
            }
          ]
        }
      },
      "steps": [
        {
          "name": "Install Python",
          "uses": "actions/setup-python@v4",
          "with": {
            "python-version": "${{ matrix.python }}",
            "architecture": "x64"
          }
        },
        {
          "uses": "actions/download-artifact@v3",
          "with": {
            "name": "notebook-dist-${{ github.run_number }}",
            "path": "./dist"
          }
        },
        {
          "name": "Install the prerequisites",
          "run": "${{ matrix.py_cmd }} -m pip install -U pip wheel\n"
        },
        {
          "name": "Install the package",
          "run": "cd dist\n${{ matrix.py_cmd }} -m pip install -vv ${{ matrix.dist }}\n"
        },
        {
          "name": "Validate environment",
          "run": "${{ matrix.py_cmd }} -m pip freeze\n${{ matrix.py_cmd }} -m pip check\n"
        },
        {
          "name": "Validate the install",
          "run": "jupyter labextension list\njupyter labextension list 2>&1 | grep -ie \"@jupyter-notebook/lab-extension.*enabled.*ok\" -\njupyter server extension list\njupyter server extension list 2>&1 | grep -ie \"notebook.*enabled\" -\njupyter notebook --version\njupyter notebook --help\n"
        }
      ]
    },
    "link_check": {
      "runs-on": "ubuntu-latest",
      "timeout-minutes": 10,
      "steps": [
        {
          "uses": "actions/checkout@v3"
        },
        {
          "uses": "jupyterlab/maintainer-tools/.github/actions/base-setup@v1"
        },
        {
          "uses": "jupyterlab/maintainer-tools/.github/actions/check-links@v1",
          "with": {
            "ignore_links": "https://playwright.dev/docs/test-cli/"
          }
        }
      ]
    },
    "pre_commit": {
      "runs-on": "ubuntu-latest",
      "timeout-minutes": 10,
      "steps": [
        {
          "uses": "actions/checkout@v3"
        },
        {
          "uses": "jupyterlab/maintainer-tools/.github/actions/base-setup@v1"
        },
        {
          "run": "pip install -e ."
        },
        {
          "uses": "jupyterlab/maintainer-tools/.github/actions/pre-commit@v1"
        }
      ]
    }
  }
}