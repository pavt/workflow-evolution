{
  "name": "Build Triton wheels",
  "on": {
    "push": {
      "branches": [
        "main",
        "master"
      ],
      "paths": [
        ".github/workflows/build-triton-wheel.yml",
        ".github/scripts/build_triton_wheel.py",
        ".github/ci_commit_pins/triton.txt"
      ]
    },
    "pull_request": {
      "paths": [
        ".github/workflows/build-triton-wheel.yml",
        ".github/scripts/build_triton_wheel.py",
        ".github/ci_commit_pins/triton.txt"
      ]
    }
  },
  "concurrency": {
    "group": "${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}",
    "cancel-in-progress": true
  },
  "jobs": {
    "build-wheel": {
      "runs-on": [
        "self-hosted",
        "linux.2xlarge"
      ],
      "strategy": {
        "fail-fast": false,
        "matrix": {
          "py_vers": [
            "3.7",
            "3.8",
            "3.9",
            "3.10",
            "3.11"
          ]
        }
      },
      "timeout-minutes": 40,
      "env": {
        "DOCKER_IMAGE": "pytorch/manylinux-builder:cuda11.6",
        "PY_VERS": "${{ matrix.py_vers }}"
      },
      "steps": [
        {
          "name": "Checkout PyTorch",
          "uses": "pytorch/pytorch/.github/actions/checkout-pytorch@master",
          "with": {
            "submodules": false
          }
        },
        {
          "name": "Setup Linux",
          "uses": "./.github/actions/setup-linux"
        },
        {
          "name": "Setup SSH (Click me for login details)",
          "uses": "pytorch/test-infra/.github/actions/setup-ssh@main",
          "with": {
            "github-secret": "${{ secrets.GITHUB_TOKEN }}"
          }
        },
        {
          "name": "Pull Docker image",
          "uses": "pytorch/test-infra/.github/actions/pull-docker-image@main",
          "with": {
            "docker-image": "${{ env.DOCKER_IMAGE }}"
          }
        },
        {
          "name": "Build Triton wheel",
          "run": "set -x\nmkdir -p \"${RUNNER_TEMP}/artifacts/\"\ncontainer_name=$(docker run \\\n  --tty \\\n  --detach \\\n  -v \"${GITHUB_WORKSPACE}:/pytorch\" \\\n  -v \"${RUNNER_TEMP}/artifacts:/artifacts\" \\\n  -w /artifacts/ \\\n  \"${DOCKER_IMAGE}\"      \\\n)\n\n# Determine python executable for given version\ncase $PY_VERS in\n3.7)\n  PYTHON_EXECUTABLE=/opt/python/cp37-cp37m/bin/python\n  ;;\n3.8)\n  PYTHON_EXECUTABLE=/opt/python/cp38-cp38/bin/python\n  ;;\n3.9)\n  PYTHON_EXECUTABLE=/opt/python/cp39-cp39/bin/python\n  ;;\n3.10)\n  PYTHON_EXECUTABLE=/opt/python/cp310-cp310/bin/python\n  ;;\n3.11)\n  PYTHON_EXECUTABLE=/opt/python/cp311-cp311/bin/python\n  ;;\n*)\n  echo \"Unsupported python version ${PY_VERS}\"\n  exit 1\n  ;;\nesac\n\ndocker exec -t \"${container_name}\" yum install -y llvm11 llvm11-devel llvm11-static llvm11-libs zlib-devel\ndocker exec -t \"${container_name}\" \"${PYTHON_EXECUTABLE}\" /pytorch/.github/scripts/build_triton_wheel.py\ndocker exec -t \"${container_name}\" chown -R 1000.1000 /artifacts\n"
        },
        {
          "uses": "actions/upload-artifact@v3",
          "with": {
            "name": "pytorch-triton-${{ matrix.py_vers }}",
            "if-no-files-found": "error",
            "path": "${{ runner.temp }}/artifacts/*"
          }
        },
        {
          "name": "Teardown Linux",
          "uses": "pytorch/test-infra/.github/actions/teardown-linux@main",
          "if": "always()"
        }
      ]
    },
    "upload-wheel": {
      "runs-on": "linux.20_04.4x",
      "needs": "build-wheel",
      "container": {
        "image": "continuumio/miniconda3:4.12.0"
      },
      "env": {
        "GITHUB_TOKEN": "${{ secrets.github-token }}"
      },
      "steps": [
        {
          "name": "Download Build Artifacts (3.7)",
          "uses": "actions/download-artifact@v3",
          "with": {
            "name": "pytorch-triton-3.7",
            "path": "${{ runner.temp }}/artifacts/"
          }
        },
        {
          "name": "Download Build Artifacts (3.8)",
          "uses": "actions/download-artifact@v3",
          "with": {
            "name": "pytorch-triton-3.8",
            "path": "${{ runner.temp }}/artifacts/"
          }
        },
        {
          "name": "Download Build Artifacts (3.9)",
          "uses": "actions/download-artifact@v3",
          "with": {
            "name": "pytorch-triton-3.9",
            "path": "${{ runner.temp }}/artifacts/"
          }
        },
        {
          "name": "Download Build Artifacts (3.10)",
          "uses": "actions/download-artifact@v3",
          "with": {
            "name": "pytorch-triton-3.10",
            "path": "${{ runner.temp }}/artifacts/"
          }
        },
        {
          "name": "Download Build Artifacts (3.11)",
          "uses": "actions/download-artifact@v3",
          "with": {
            "name": "pytorch-triton-3.11",
            "path": "${{ runner.temp }}/artifacts/"
          }
        },
        {
          "name": "Upload binaries",
          "if": "${{ github.event_name == 'push' && (github.event.ref == 'refs/heads/master' || github.event.ref == 'refs/heads/main') }}",
          "env": {
            "PKG_DIR": "${{ runner.temp }}/artifacts",
            "AWS_ACCESS_KEY_ID": "${{ secrets.AWS_S3_UPDATE_ACCESS_KEY_ID }}",
            "AWS_SECRET_ACCESS_KEY": "${{ secrets.AWS_S3_UPDATE_SECRET_ACCESS_KEY }}",
            "UPLOAD_BUCKET": "s3://pytorch"
          },
          "run": "set -ex\npip install -q awscli\ns3_dir=\"${UPLOAD_BUCKET}/whl/nightly/\"\nfor pkg in \"${PKG_DIR}/\"*.whl; do\n  aws s3 cp --no-progress --acl public-read \"${pkg}\" \"${s3_dir}\"\n done\n"
        }
      ]
    }
  }
}