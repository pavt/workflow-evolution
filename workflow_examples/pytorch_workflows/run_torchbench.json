{
  "name": "TorchBench CI (pytorch-linux-py3.8-cu116)",
  "on": {
    "pull_request": null
  },
  "env": {
    "PYTHON_VERSION": "3.8",
    "NUMPY_VERSION": "1.21.2",
    "SETUP_SCRIPT": "/data/nvme/bin/setup_instance.sh",
    "PR_NUM": "${{ github.event.number }}",
    "PR_BODY": "${{ github.event.pull_request.body }}",
    "PR_BASE_SHA": "${{ github.event.pull_request.base.sha }}",
    "PR_HEAD_SHA": "${{ github.event.pull_request.head.sha }}",
    "AWS_ACCESS_KEY_ID": "${{ secrets.AWS_OSSCI_METRICS_V2_ACCESS_KEY_ID }}",
    "AWS_SECRET_ACCESS_KEY": "${{ secrets.AWS_OSSCI_METRICS_V2_SECRET_ACCESS_KEY }}"
  },
  "jobs": {
    "run-torchbench": {
      "if": "${{ github.repository_owner == 'pytorch' && contains(github.event.pull_request.body, 'RUN_TORCHBENCH:') }}",
      "runs-on": [
        "self-hosted",
        "bm-runner"
      ],
      "timeout-minutes": 720,
      "steps": [
        {
          "name": "Checkout PyTorch",
          "uses": "zhouzhuojie/checkout@05b13c9a0d21f08f6d5e64a1d5042246d13619d9",
          "with": {
            "path": "pytorch"
          }
        },
        {
          "name": "Update self-hosted PyTorch",
          "run": "pushd \"${HOME}\"/pytorch\ngit remote prune origin\ngit fetch\npopd\n"
        },
        {
          "name": "Create conda environment and install deps",
          "run": "conda create -y -n pr-ci python=\"${PYTHON_VERSION}\"\n# shellcheck source=/dev/null\n. \"${SETUP_SCRIPT}\"\nconda activate pr-ci\n# pin cmake version to 3.22 since 3.23 breaks pytorch build\n# see details at: https://github.com/pytorch/pytorch/issues/74985\nconda install -y numpy=\"${NUMPY_VERSION}\" requests ninja pyyaml mkl mkl-include \\\n                 setuptools cmake=3.22 cffi typing_extensions boto3 \\\n                 future six dataclasses pillow pytest tabulate gitpython git-lfs tqdm psutil\npip install --pre torch torchvision torchtext -f https://download.pytorch.org/whl/nightly/cu116/torch_nightly.html\n"
        },
        {
          "name": "Setup TorchBench branch",
          "run": "# shellcheck source=/dev/null\n. \"${SETUP_SCRIPT}\"\nconda activate pr-ci\nPR_BODY_FILE=/tmp/pr-body.txt\necho \"$PR_BODY\" > ${PR_BODY_FILE}\npython pytorch/.github/scripts/run_torchbench.py --pr-body \"${PR_BODY_FILE}\" set-torchbench-branch\n"
        },
        {
          "name": "Checkout TorchBench",
          "uses": "zhouzhuojie/checkout@05b13c9a0d21f08f6d5e64a1d5042246d13619d9",
          "with": {
            "repository": "pytorch/benchmark",
            "path": "benchmark",
            "lfs": false,
            "ref": "${{ env.TORCHBENCH_BRANCH }}"
          }
        },
        {
          "name": "GPU Info",
          "run": "nvidia-smi\n"
        },
        {
          "name": "Run TorchBench",
          "run": "set -x\npushd \"${HOME}\"/pytorch\nPR_MERGE_BASE=$(git merge-base \"$PR_BASE_SHA\" \"$PR_HEAD_SHA\")\npopd\nPR_BODY_FILE=/tmp/pr-body.txt\necho \"$PR_BODY\" > ${PR_BODY_FILE}\n# shellcheck source=/dev/null\n. \"${SETUP_SCRIPT}\"\nconda activate pr-ci\npython3 pytorch/.github/scripts/run_torchbench.py \\\n        --pr-body \"$PR_BODY_FILE\" \\\n        run \\\n        --pytorch-path \"${HOME}\"/pytorch \\\n        --torchbench-path \"${PWD}\"/benchmark \\\n        --pr-num \"$PR_NUM\" \\\n        --pr-base-sha \"$PR_MERGE_BASE\" \\\n        --pr-head-sha \"$PR_HEAD_SHA\"\n"
        },
        {
          "name": "Upload result to S3",
          "run": "# shellcheck source=/dev/null\n. \"${SETUP_SCRIPT}\"\nconda activate pr-ci\npython3 pytorch/.github/scripts/run_torchbench.py \\\n        upload-s3 \\\n        --result-dir \"${HOME}/.torchbench/bisection/pr${{ github.event.number }}\"\n"
        },
        {
          "name": "Remove conda environment and cleanup",
          "run": "conda env remove --name pr-ci\nrm /tmp/pr-body.txt\n"
        },
        {
          "name": "Upload artifact",
          "uses": "actions/upload-artifact@v3",
          "with": {
            "name": "TorchBench result",
            "path": "~/.torchbench/bisection/pr${{ github.event.number }}"
          }
        }
      ]
    }
  },
  "concurrency": {
    "group": "${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}",
    "cancel-in-progress": true
  }
}