{
  "name": "macos-binary-wheel",
  "on": {
    "push": {
      "branches": [
        "nightly"
      ],
      "tags": [
        "v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+",
        "ciflow/binaries/*",
        "ciflow/binaries_wheel/*"
      ]
    },
    "workflow_dispatch": null
  },
  "env": {
    "ALPINE_IMAGE": "308535385114.dkr.ecr.us-east-1.amazonaws.com/tool/alpine",
    "ANACONDA_USER": "pytorch",
    "AWS_DEFAULT_REGION": "us-east-1",
    "BUILD_ENVIRONMENT": "macos-binary-wheel",
    "GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}",
    "PR_NUMBER": "${{ github.event.pull_request.number }}",
    "SKIP_ALL_TESTS": 1
  },
  "concurrency": {
    "group": "macos-binary-wheel-${{ github.event.pull_request.number || github.ref_name }}-${{ github.ref_type == 'branch' && github.sha }}-${{ github.event_name == 'workflow_dispatch' }}",
    "cancel-in-progress": true
  },
  "jobs": {
    "wheel-py3_7-cpu-build": {
      "if": "${{ github.repository_owner == 'pytorch' }}",
      "runs-on": "macos-12-xl",
      "timeout-minutes": 240,
      "env": {
        "PYTORCH_ROOT": "${{ github.workspace }}/pytorch",
        "BUILDER_ROOT": "${{ github.workspace }}/builder",
        "PACKAGE_TYPE": "wheel",
        "DESIRED_CUDA": "cpu",
        "GPU_ARCH_TYPE": "cpu",
        "SKIP_ALL_TESTS": 1,
        "DESIRED_PYTHON": "3.7",
        "AWS_ACCESS_KEY_ID": "${{ secrets.MACOS_SCCACHE_S3_ACCESS_KEY_ID }}",
        "AWS_SECRET_ACCESS_KEY": "${{ secrets.MACOS_SCCACHE_S3_SECRET_ACCESS_KEY }}"
      },
      "steps": [
        {
          "name": "Populate binary env",
          "shell": "bash",
          "run": "# shellcheck disable=SC2129\necho \"BINARY_ENV_FILE=${RUNNER_TEMP}/env\" >> \"${GITHUB_ENV}\"\n# shellcheck disable=SC2129\necho \"PYTORCH_FINAL_PACKAGE_DIR=${RUNNER_TEMP}/artifacts\" >> \"${GITHUB_ENV}\"\n# shellcheck disable=SC2129\necho \"MAC_PACKAGE_WORK_DIR=${RUNNER_TEMP}\" >> \"${GITHUB_ENV}\"\n"
        },
        {
          "name": "Install conda and dependencies",
          "run": "# Install conda, setup-miniconda messes with the path that messes with the ruby stuff we do later on\ncurl --retry 3 -o \"${RUNNER_TEMP}/conda.sh\" https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh\nchmod +x \"${RUNNER_TEMP}/conda.sh\"\n/bin/bash \"${RUNNER_TEMP}/conda.sh\" -b -p \"${RUNNER_TEMP}/anaconda\"\necho \"${RUNNER_TEMP}/anaconda/bin\" >> \"${GITHUB_PATH}\"\necho \"DEVELOPER_DIR=/Applications/Xcode_13.3.1.app/Contents/Developer\" >> \"${GITHUB_ENV}\"\n"
        },
        {
          "name": "Checkout PyTorch",
          "uses": "zhouzhuojie/checkout@05b13c9a0d21f08f6d5e64a1d5042246d13619d9",
          "with": {
            "ref": "${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}",
            "submodules": "recursive",
            "path": "pytorch"
          }
        },
        {
          "name": "Clean PyTorch checkout",
          "run": "# Remove any artifacts from the previous checkouts\ngit clean -fxd\n",
          "working-directory": "pytorch"
        },
        {
          "name": "Checkout pytorch/builder",
          "uses": "zhouzhuojie/checkout@05b13c9a0d21f08f6d5e64a1d5042246d13619d9",
          "with": {
            "ref": "main",
            "submodules": "recursive",
            "repository": "pytorch/builder",
            "path": "builder"
          }
        },
        {
          "name": "Clean pytorch/builder checkout",
          "run": "# Remove any artifacts from the previous checkouts\ngit clean -fxd\n",
          "working-directory": "builder"
        },
        {
          "name": "Install sccache (only for non-forked PRs, and pushes to trunk)",
          "uses": "nick-fields/retry@v2.8.2",
          "if": "${{ github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository }}",
          "with": {
            "timeout_minutes": 5,
            "max_attempts": 3,
            "retry_wait_seconds": 90,
            "command": "sudo curl --retry 3 https://s3.amazonaws.com/ossci-macos/sccache_v2.15 --output /usr/local/bin/sccache\nsudo chmod +x /usr/local/bin/sccache\necho \"SCCACHE_BUCKET=ossci-compiler-cache-circleci-v2\" >> \"${GITHUB_ENV}\"\n"
          }
        },
        {
          "name": "Populate binary env",
          "run": "# shellcheck disable=SC1091\nsource \"${RUNNER_TEMP}/anaconda/bin/activate\"\n\"${PYTORCH_ROOT}/.circleci/scripts/binary_populate_env.sh\"\n"
        },
        {
          "name": "Build PyTorch binary",
          "run": "# shellcheck disable=SC1091\nsource \"${RUNNER_TEMP}/anaconda/bin/activate\"\n\"${PYTORCH_ROOT}/.circleci/scripts/binary_macos_build.sh\"\n"
        },
        {
          "uses": "actions/upload-artifact@v3",
          "if": "always()",
          "with": {
            "name": "wheel-py3_7-cpu",
            "retention-days": 14,
            "if-no-files-found": "error",
            "path": "${{ env.PYTORCH_FINAL_PACKAGE_DIR }}"
          }
        }
      ]
    },
    "wheel-py3_7-cpu-upload": {
      "if": "${{ github.repository_owner == 'pytorch' }}",
      "needs": "wheel-py3_7-cpu-build",
      "with": {
        "PYTORCH_ROOT": "/pytorch",
        "BUILDER_ROOT": "/builder",
        "PACKAGE_TYPE": "wheel",
        "DESIRED_CUDA": "cpu",
        "GPU_ARCH_TYPE": "cpu",
        "DOCKER_IMAGE": "pytorch/manylinux-builder:cpu",
        "DESIRED_PYTHON": "3.7",
        "build_name": "wheel-py3_7-cpu",
        "use_s3": false
      },
      "secrets": {
        "github-token": "${{ secrets.GITHUB_TOKEN }}",
        "aws-access-key-id": "${{ secrets.AWS_PYTORCH_UPLOADER_ACCESS_KEY_ID }}",
        "aws-pytorch-uploader-secret-access-key": "${{ secrets.AWS_PYTORCH_UPLOADER_SECRET_ACCESS_KEY }}",
        "conda-pytorchbot-token": "${{ secrets.CONDA_PYTORCHBOT_TOKEN }}"
      },
      "uses": "./.github/workflows/_binary-upload.yml"
    },
    "wheel-py3_8-cpu-build": {
      "if": "${{ github.repository_owner == 'pytorch' }}",
      "runs-on": "macos-12-xl",
      "timeout-minutes": 240,
      "env": {
        "PYTORCH_ROOT": "${{ github.workspace }}/pytorch",
        "BUILDER_ROOT": "${{ github.workspace }}/builder",
        "PACKAGE_TYPE": "wheel",
        "DESIRED_CUDA": "cpu",
        "GPU_ARCH_TYPE": "cpu",
        "SKIP_ALL_TESTS": 1,
        "DESIRED_PYTHON": "3.8",
        "AWS_ACCESS_KEY_ID": "${{ secrets.MACOS_SCCACHE_S3_ACCESS_KEY_ID }}",
        "AWS_SECRET_ACCESS_KEY": "${{ secrets.MACOS_SCCACHE_S3_SECRET_ACCESS_KEY }}"
      },
      "steps": [
        {
          "name": "Populate binary env",
          "shell": "bash",
          "run": "# shellcheck disable=SC2129\necho \"BINARY_ENV_FILE=${RUNNER_TEMP}/env\" >> \"${GITHUB_ENV}\"\n# shellcheck disable=SC2129\necho \"PYTORCH_FINAL_PACKAGE_DIR=${RUNNER_TEMP}/artifacts\" >> \"${GITHUB_ENV}\"\n# shellcheck disable=SC2129\necho \"MAC_PACKAGE_WORK_DIR=${RUNNER_TEMP}\" >> \"${GITHUB_ENV}\"\n"
        },
        {
          "name": "Install conda and dependencies",
          "run": "# Install conda, setup-miniconda messes with the path that messes with the ruby stuff we do later on\ncurl --retry 3 -o \"${RUNNER_TEMP}/conda.sh\" https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh\nchmod +x \"${RUNNER_TEMP}/conda.sh\"\n/bin/bash \"${RUNNER_TEMP}/conda.sh\" -b -p \"${RUNNER_TEMP}/anaconda\"\necho \"${RUNNER_TEMP}/anaconda/bin\" >> \"${GITHUB_PATH}\"\necho \"DEVELOPER_DIR=/Applications/Xcode_13.3.1.app/Contents/Developer\" >> \"${GITHUB_ENV}\"\n"
        },
        {
          "name": "Checkout PyTorch",
          "uses": "zhouzhuojie/checkout@05b13c9a0d21f08f6d5e64a1d5042246d13619d9",
          "with": {
            "ref": "${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}",
            "submodules": "recursive",
            "path": "pytorch"
          }
        },
        {
          "name": "Clean PyTorch checkout",
          "run": "# Remove any artifacts from the previous checkouts\ngit clean -fxd\n",
          "working-directory": "pytorch"
        },
        {
          "name": "Checkout pytorch/builder",
          "uses": "zhouzhuojie/checkout@05b13c9a0d21f08f6d5e64a1d5042246d13619d9",
          "with": {
            "ref": "main",
            "submodules": "recursive",
            "repository": "pytorch/builder",
            "path": "builder"
          }
        },
        {
          "name": "Clean pytorch/builder checkout",
          "run": "# Remove any artifacts from the previous checkouts\ngit clean -fxd\n",
          "working-directory": "builder"
        },
        {
          "name": "Install sccache (only for non-forked PRs, and pushes to trunk)",
          "uses": "nick-fields/retry@v2.8.2",
          "if": "${{ github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository }}",
          "with": {
            "timeout_minutes": 5,
            "max_attempts": 3,
            "retry_wait_seconds": 90,
            "command": "sudo curl --retry 3 https://s3.amazonaws.com/ossci-macos/sccache_v2.15 --output /usr/local/bin/sccache\nsudo chmod +x /usr/local/bin/sccache\necho \"SCCACHE_BUCKET=ossci-compiler-cache-circleci-v2\" >> \"${GITHUB_ENV}\"\n"
          }
        },
        {
          "name": "Populate binary env",
          "run": "# shellcheck disable=SC1091\nsource \"${RUNNER_TEMP}/anaconda/bin/activate\"\n\"${PYTORCH_ROOT}/.circleci/scripts/binary_populate_env.sh\"\n"
        },
        {
          "name": "Build PyTorch binary",
          "run": "# shellcheck disable=SC1091\nsource \"${RUNNER_TEMP}/anaconda/bin/activate\"\n\"${PYTORCH_ROOT}/.circleci/scripts/binary_macos_build.sh\"\n"
        },
        {
          "uses": "actions/upload-artifact@v3",
          "if": "always()",
          "with": {
            "name": "wheel-py3_8-cpu",
            "retention-days": 14,
            "if-no-files-found": "error",
            "path": "${{ env.PYTORCH_FINAL_PACKAGE_DIR }}"
          }
        }
      ]
    },
    "wheel-py3_8-cpu-upload": {
      "if": "${{ github.repository_owner == 'pytorch' }}",
      "needs": "wheel-py3_8-cpu-build",
      "with": {
        "PYTORCH_ROOT": "/pytorch",
        "BUILDER_ROOT": "/builder",
        "PACKAGE_TYPE": "wheel",
        "DESIRED_CUDA": "cpu",
        "GPU_ARCH_TYPE": "cpu",
        "DOCKER_IMAGE": "pytorch/manylinux-builder:cpu",
        "DESIRED_PYTHON": "3.8",
        "build_name": "wheel-py3_8-cpu",
        "use_s3": false
      },
      "secrets": {
        "github-token": "${{ secrets.GITHUB_TOKEN }}",
        "aws-access-key-id": "${{ secrets.AWS_PYTORCH_UPLOADER_ACCESS_KEY_ID }}",
        "aws-pytorch-uploader-secret-access-key": "${{ secrets.AWS_PYTORCH_UPLOADER_SECRET_ACCESS_KEY }}",
        "conda-pytorchbot-token": "${{ secrets.CONDA_PYTORCHBOT_TOKEN }}"
      },
      "uses": "./.github/workflows/_binary-upload.yml"
    },
    "wheel-py3_9-cpu-build": {
      "if": "${{ github.repository_owner == 'pytorch' }}",
      "runs-on": "macos-12-xl",
      "timeout-minutes": 240,
      "env": {
        "PYTORCH_ROOT": "${{ github.workspace }}/pytorch",
        "BUILDER_ROOT": "${{ github.workspace }}/builder",
        "PACKAGE_TYPE": "wheel",
        "DESIRED_CUDA": "cpu",
        "GPU_ARCH_TYPE": "cpu",
        "SKIP_ALL_TESTS": 1,
        "DESIRED_PYTHON": "3.9",
        "AWS_ACCESS_KEY_ID": "${{ secrets.MACOS_SCCACHE_S3_ACCESS_KEY_ID }}",
        "AWS_SECRET_ACCESS_KEY": "${{ secrets.MACOS_SCCACHE_S3_SECRET_ACCESS_KEY }}"
      },
      "steps": [
        {
          "name": "Populate binary env",
          "shell": "bash",
          "run": "# shellcheck disable=SC2129\necho \"BINARY_ENV_FILE=${RUNNER_TEMP}/env\" >> \"${GITHUB_ENV}\"\n# shellcheck disable=SC2129\necho \"PYTORCH_FINAL_PACKAGE_DIR=${RUNNER_TEMP}/artifacts\" >> \"${GITHUB_ENV}\"\n# shellcheck disable=SC2129\necho \"MAC_PACKAGE_WORK_DIR=${RUNNER_TEMP}\" >> \"${GITHUB_ENV}\"\n"
        },
        {
          "name": "Install conda and dependencies",
          "run": "# Install conda, setup-miniconda messes with the path that messes with the ruby stuff we do later on\ncurl --retry 3 -o \"${RUNNER_TEMP}/conda.sh\" https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh\nchmod +x \"${RUNNER_TEMP}/conda.sh\"\n/bin/bash \"${RUNNER_TEMP}/conda.sh\" -b -p \"${RUNNER_TEMP}/anaconda\"\necho \"${RUNNER_TEMP}/anaconda/bin\" >> \"${GITHUB_PATH}\"\necho \"DEVELOPER_DIR=/Applications/Xcode_13.3.1.app/Contents/Developer\" >> \"${GITHUB_ENV}\"\n"
        },
        {
          "name": "Checkout PyTorch",
          "uses": "zhouzhuojie/checkout@05b13c9a0d21f08f6d5e64a1d5042246d13619d9",
          "with": {
            "ref": "${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}",
            "submodules": "recursive",
            "path": "pytorch"
          }
        },
        {
          "name": "Clean PyTorch checkout",
          "run": "# Remove any artifacts from the previous checkouts\ngit clean -fxd\n",
          "working-directory": "pytorch"
        },
        {
          "name": "Checkout pytorch/builder",
          "uses": "zhouzhuojie/checkout@05b13c9a0d21f08f6d5e64a1d5042246d13619d9",
          "with": {
            "ref": "main",
            "submodules": "recursive",
            "repository": "pytorch/builder",
            "path": "builder"
          }
        },
        {
          "name": "Clean pytorch/builder checkout",
          "run": "# Remove any artifacts from the previous checkouts\ngit clean -fxd\n",
          "working-directory": "builder"
        },
        {
          "name": "Install sccache (only for non-forked PRs, and pushes to trunk)",
          "uses": "nick-fields/retry@v2.8.2",
          "if": "${{ github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository }}",
          "with": {
            "timeout_minutes": 5,
            "max_attempts": 3,
            "retry_wait_seconds": 90,
            "command": "sudo curl --retry 3 https://s3.amazonaws.com/ossci-macos/sccache_v2.15 --output /usr/local/bin/sccache\nsudo chmod +x /usr/local/bin/sccache\necho \"SCCACHE_BUCKET=ossci-compiler-cache-circleci-v2\" >> \"${GITHUB_ENV}\"\n"
          }
        },
        {
          "name": "Populate binary env",
          "run": "# shellcheck disable=SC1091\nsource \"${RUNNER_TEMP}/anaconda/bin/activate\"\n\"${PYTORCH_ROOT}/.circleci/scripts/binary_populate_env.sh\"\n"
        },
        {
          "name": "Build PyTorch binary",
          "run": "# shellcheck disable=SC1091\nsource \"${RUNNER_TEMP}/anaconda/bin/activate\"\n\"${PYTORCH_ROOT}/.circleci/scripts/binary_macos_build.sh\"\n"
        },
        {
          "uses": "actions/upload-artifact@v3",
          "if": "always()",
          "with": {
            "name": "wheel-py3_9-cpu",
            "retention-days": 14,
            "if-no-files-found": "error",
            "path": "${{ env.PYTORCH_FINAL_PACKAGE_DIR }}"
          }
        }
      ]
    },
    "wheel-py3_9-cpu-upload": {
      "if": "${{ github.repository_owner == 'pytorch' }}",
      "needs": "wheel-py3_9-cpu-build",
      "with": {
        "PYTORCH_ROOT": "/pytorch",
        "BUILDER_ROOT": "/builder",
        "PACKAGE_TYPE": "wheel",
        "DESIRED_CUDA": "cpu",
        "GPU_ARCH_TYPE": "cpu",
        "DOCKER_IMAGE": "pytorch/manylinux-builder:cpu",
        "DESIRED_PYTHON": "3.9",
        "build_name": "wheel-py3_9-cpu",
        "use_s3": false
      },
      "secrets": {
        "github-token": "${{ secrets.GITHUB_TOKEN }}",
        "aws-access-key-id": "${{ secrets.AWS_PYTORCH_UPLOADER_ACCESS_KEY_ID }}",
        "aws-pytorch-uploader-secret-access-key": "${{ secrets.AWS_PYTORCH_UPLOADER_SECRET_ACCESS_KEY }}",
        "conda-pytorchbot-token": "${{ secrets.CONDA_PYTORCHBOT_TOKEN }}"
      },
      "uses": "./.github/workflows/_binary-upload.yml"
    },
    "wheel-py3_10-cpu-build": {
      "if": "${{ github.repository_owner == 'pytorch' }}",
      "runs-on": "macos-12-xl",
      "timeout-minutes": 240,
      "env": {
        "PYTORCH_ROOT": "${{ github.workspace }}/pytorch",
        "BUILDER_ROOT": "${{ github.workspace }}/builder",
        "PACKAGE_TYPE": "wheel",
        "DESIRED_CUDA": "cpu",
        "GPU_ARCH_TYPE": "cpu",
        "SKIP_ALL_TESTS": 1,
        "DESIRED_PYTHON": "3.10",
        "AWS_ACCESS_KEY_ID": "${{ secrets.MACOS_SCCACHE_S3_ACCESS_KEY_ID }}",
        "AWS_SECRET_ACCESS_KEY": "${{ secrets.MACOS_SCCACHE_S3_SECRET_ACCESS_KEY }}"
      },
      "steps": [
        {
          "name": "Populate binary env",
          "shell": "bash",
          "run": "# shellcheck disable=SC2129\necho \"BINARY_ENV_FILE=${RUNNER_TEMP}/env\" >> \"${GITHUB_ENV}\"\n# shellcheck disable=SC2129\necho \"PYTORCH_FINAL_PACKAGE_DIR=${RUNNER_TEMP}/artifacts\" >> \"${GITHUB_ENV}\"\n# shellcheck disable=SC2129\necho \"MAC_PACKAGE_WORK_DIR=${RUNNER_TEMP}\" >> \"${GITHUB_ENV}\"\n"
        },
        {
          "name": "Install conda and dependencies",
          "run": "# Install conda, setup-miniconda messes with the path that messes with the ruby stuff we do later on\ncurl --retry 3 -o \"${RUNNER_TEMP}/conda.sh\" https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh\nchmod +x \"${RUNNER_TEMP}/conda.sh\"\n/bin/bash \"${RUNNER_TEMP}/conda.sh\" -b -p \"${RUNNER_TEMP}/anaconda\"\necho \"${RUNNER_TEMP}/anaconda/bin\" >> \"${GITHUB_PATH}\"\necho \"DEVELOPER_DIR=/Applications/Xcode_13.3.1.app/Contents/Developer\" >> \"${GITHUB_ENV}\"\n"
        },
        {
          "name": "Checkout PyTorch",
          "uses": "zhouzhuojie/checkout@05b13c9a0d21f08f6d5e64a1d5042246d13619d9",
          "with": {
            "ref": "${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}",
            "submodules": "recursive",
            "path": "pytorch"
          }
        },
        {
          "name": "Clean PyTorch checkout",
          "run": "# Remove any artifacts from the previous checkouts\ngit clean -fxd\n",
          "working-directory": "pytorch"
        },
        {
          "name": "Checkout pytorch/builder",
          "uses": "zhouzhuojie/checkout@05b13c9a0d21f08f6d5e64a1d5042246d13619d9",
          "with": {
            "ref": "main",
            "submodules": "recursive",
            "repository": "pytorch/builder",
            "path": "builder"
          }
        },
        {
          "name": "Clean pytorch/builder checkout",
          "run": "# Remove any artifacts from the previous checkouts\ngit clean -fxd\n",
          "working-directory": "builder"
        },
        {
          "name": "Install sccache (only for non-forked PRs, and pushes to trunk)",
          "uses": "nick-fields/retry@v2.8.2",
          "if": "${{ github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository }}",
          "with": {
            "timeout_minutes": 5,
            "max_attempts": 3,
            "retry_wait_seconds": 90,
            "command": "sudo curl --retry 3 https://s3.amazonaws.com/ossci-macos/sccache_v2.15 --output /usr/local/bin/sccache\nsudo chmod +x /usr/local/bin/sccache\necho \"SCCACHE_BUCKET=ossci-compiler-cache-circleci-v2\" >> \"${GITHUB_ENV}\"\n"
          }
        },
        {
          "name": "Populate binary env",
          "run": "# shellcheck disable=SC1091\nsource \"${RUNNER_TEMP}/anaconda/bin/activate\"\n\"${PYTORCH_ROOT}/.circleci/scripts/binary_populate_env.sh\"\n"
        },
        {
          "name": "Build PyTorch binary",
          "run": "# shellcheck disable=SC1091\nsource \"${RUNNER_TEMP}/anaconda/bin/activate\"\n\"${PYTORCH_ROOT}/.circleci/scripts/binary_macos_build.sh\"\n"
        },
        {
          "uses": "actions/upload-artifact@v3",
          "if": "always()",
          "with": {
            "name": "wheel-py3_10-cpu",
            "retention-days": 14,
            "if-no-files-found": "error",
            "path": "${{ env.PYTORCH_FINAL_PACKAGE_DIR }}"
          }
        }
      ]
    },
    "wheel-py3_10-cpu-upload": {
      "if": "${{ github.repository_owner == 'pytorch' }}",
      "needs": "wheel-py3_10-cpu-build",
      "with": {
        "PYTORCH_ROOT": "/pytorch",
        "BUILDER_ROOT": "/builder",
        "PACKAGE_TYPE": "wheel",
        "DESIRED_CUDA": "cpu",
        "GPU_ARCH_TYPE": "cpu",
        "DOCKER_IMAGE": "pytorch/manylinux-builder:cpu",
        "DESIRED_PYTHON": "3.10",
        "build_name": "wheel-py3_10-cpu",
        "use_s3": false
      },
      "secrets": {
        "github-token": "${{ secrets.GITHUB_TOKEN }}",
        "aws-access-key-id": "${{ secrets.AWS_PYTORCH_UPLOADER_ACCESS_KEY_ID }}",
        "aws-pytorch-uploader-secret-access-key": "${{ secrets.AWS_PYTORCH_UPLOADER_SECRET_ACCESS_KEY }}",
        "conda-pytorchbot-token": "${{ secrets.CONDA_PYTORCHBOT_TOKEN }}"
      },
      "uses": "./.github/workflows/_binary-upload.yml"
    }
  }
}